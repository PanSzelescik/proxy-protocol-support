buildscript {
    repositories {
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'net.minecraftforge.gradle' version '5.+'
    id 'com.github.johnrengelman.shadow' version '7.+'
    id 'java'
}

apply plugin: 'org.spongepowered.mixin'

group = 'pl.panszelescik'
version = '1.1.0-forge'

java {
    archivesBaseName = 'proxy_protocol_support'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

configurations {
    shade
    implementation.extendsFrom shade
}

minecraft {
    mappings channel: 'official', version: '1.19.4'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'


            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'proxy_protocol_support'

            mods {
                proxy_protocol_support {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'proxy_protocol_support'

            mods {
                proxy_protocol_support {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'proxy_protocol_support'

            mods {
                proxy_protocol_support {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'proxy_protocol_support', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                proxy_protocol_support {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "proxy_protocol_support.refmap.json"

    config "proxy_protocol_support.mixins.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.4-45.0.49'

    implementation('io.netty:netty-codec-haproxy:4.1.91.Final')
    shade('io.netty:netty-codec-haproxy:4.1.91.Final') {
        exclude group: '*', module: '*'
    }

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

jar {
    archiveClassifier = 'slim'
    manifest {
        attributes([
                "Specification-Title"     : "proxy_protocol_support",
                "Specification-Vendor"    : "PanSzelescik",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "PanSzelescik",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

shadowJar {
    archiveClassifier = ''
    configurations = [project.configurations.shade]
    finalizedBy 'reobfShadowJar'
}

assemble.dependsOn shadowJar

reobf {
    shadowJar {}
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
